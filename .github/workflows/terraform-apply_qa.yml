name: "Terraform Apply Develop - QA"

on:
  push:
    branches:
      - develop

env:
  TF_CLOUD_ORGANIZATION: "lblasnar"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "aws-lambda-lab-gh-actions"
  CONFIG_DIRECTORY: "./deploy"

jobs:
  terraform:
    if: github.repository != 'hashicorp-education/learn-terraform-github-actions'
    name: "Terraform Apply QA"
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify
      - name: Verify jar created
        run: | 
          FILE=target/LambdaTest-1.0-SNAPSHOT.jar
          if test -f "$FILE"; 
          then
            echo "$FILE exists."
            cp $FILE deploy
          else
            echo "$FILE not exists."
            EXIT /B 2
          fi
      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: apply-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}
      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: apply-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}
        env:
          #  https://github.com/hashicorp/tfc-workflows-github/issues/10
          TF_VAR_environment: "\"QA\""
          TF_VAR_sqs_name: "\"SQS_QA\""
          TF_VAR_sqs_delay: 90
          TF_VAR_sqs_max_message_size: 2048
          TF_VAR_sqs_message_retention_seconds: 86400
          TF_VAR_sqs_receive_wait_time_seconds: 10
          TF_VAR_lambda_runtime: "\"java11\""
          TF_VAR_lambda_handler: "\"org.example.lambda.HandlerStream\""
          TF_VAR_lambda_function_name: "\"Lab_lambda_function_QA\""
          TF_VAR_lambda_filename: "\"LambdaTest-1.0-SNAPSHOT.jar\""
          TF_VAR_lambda_memory_size: 1024
          TF_VAR_lambda_timeout: 20
          TF_VAR_lambda_publish: true
          TF_VAR_lambda_alias_name: "\"QA\""
          TF_VAR_lambda_alias_description: "\"QA Environment\""
          TF_VAR_lambda_alias_version: 9
          TF_VAR_lambda_event_source_mapping_enabled: true
          TF_VAR_lambda_allow_invocation_from_sns_statement_id: "\"AllowExecutionFromSNSPR\""
          TF_VAR_lambda_allow_invocation_from_sns_action: "\"lambda:*\""
          TF_VAR_lambda_allow_invocation_from_sns_principal: "\"sns.amazonaws.com\""
          TF_VAR_lambda_role_name: "\"LambdaRole_QA\""
          TF_VAR_sns_protocol: "\"lambda\""
          TF_VAR_sns_name: "\"SNS_QA\""

      - name: Apply
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
        if: fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
        id: apply
        with:
          run: ${{ steps.apply-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"
